devtools::install_github("ducphucnguyen/recosinor")
install.packages("devtools")
install.packages("devtools")
library(devtools)
library(roxygen2)
data("cbt_data")
head(cbt_data)
model <- recosinor.fit(cbt ~ time(hrs) + sleep(sw) + s(MovingAvgHR),
cbt_data,
tau = c(24))
source("U:/dev/recosinor/R/recosinor.fit.R")
source("U:/dev/recosinor/R/recosinor.plot.R")
source("U:/dev/recosinor/R/cir_funs.R")
model <- recosinor.fit(cbt ~ time(hrs) + sleep(sw) + s(MovingAvgHR),
cbt_data,
tau = c(24))
## Contact
- Phuc D. Nguyen
library(mgcv)
model <- recosinor.fit(cbt ~ time(hrs) + sleep(sw) + s(MovingAvgHR),
cbt_data,
tau = c(24))
summary(model)
recosinor.plot(model, cbt_data)
library(ggplot2)
recosinor.plot(model, cbt_data)
library(pracma)
library(ggpubr)
recosinor.plot(model, cbt_data)
plot(cbt_data$hrs)
data=cbt_data
tau = 24
k=10
# recosinor functions
x_terms <- recosinor_func2(data[[hrs]], tau, k)
hrs <- gsub(".*time\\((\\w+)\\).*", "\\1", s_variable[3])
x_terms <- recosinor_func2(data$hrs, tau, k)
data$ysin <-  x_terms[["y_sin"]]
data$ycos <-  x_terms[["y_cos"]]
plot(data$ysin)
plot(data$ycos)
x= data$hrs
n_f=24
# x: hrs from recording
# n_knot: define the number of frequency
# period: 23.8 to 25
# k ~ -30 to 30
x_samples <- seq(min(x), max(x), length.out= length(n_f) )
# <- c(a1, a2, a3)
freq_samples <- n_f/24
interpolation <- splinefun(x_samples, freq_samples)
freq <- interpolation(x)
dx <- rep( 30/60/60, length(x) )
x <- 2*pi*cumsum( freq * dx )/24
#x <- 2 * pi * x/ period
n <- length(x)
y_sin <- rep(0, n)
y_cos <- rep(0, n)
for (i in 2:n) {
y_sin[i] <- sin(x[i] + y_sin[i-1]/k)
y_cos[i] <- cos(x[i] + y_cos[i-1]/k)
}
plot(y_sin)
x
dx
freq
